// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        (unknown)
// source: server/v1/server.proto

package server

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RESOURCES
type Appserver struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Appserver) Reset() {
	*x = Appserver{}
	mi := &file_server_v1_server_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Appserver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Appserver) ProtoMessage() {}

func (x *Appserver) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Appserver.ProtoReflect.Descriptor instead.
func (*Appserver) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{0}
}

func (x *Appserver) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Appserver) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Appserver) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Appserver) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type AppserverSub struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AppserverId   string                 `protobuf:"bytes,2,opt,name=appserver_id,json=appserverId,proto3" json:"appserver_id,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppserverSub) Reset() {
	*x = AppserverSub{}
	mi := &file_server_v1_server_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppserverSub) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppserverSub) ProtoMessage() {}

func (x *AppserverSub) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppserverSub.ProtoReflect.Descriptor instead.
func (*AppserverSub) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{1}
}

func (x *AppserverSub) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AppserverSub) GetAppserverId() string {
	if x != nil {
		return x.AppserverId
	}
	return ""
}

func (x *AppserverSub) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AppserverSub) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type AppserverAndSub struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SubId         string                 `protobuf:"bytes,1,opt,name=sub_id,json=subId,proto3" json:"sub_id,omitempty"`
	Appserver     *Appserver             `protobuf:"bytes,2,opt,name=appserver,proto3" json:"appserver,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppserverAndSub) Reset() {
	*x = AppserverAndSub{}
	mi := &file_server_v1_server_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppserverAndSub) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppserverAndSub) ProtoMessage() {}

func (x *AppserverAndSub) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppserverAndSub.ProtoReflect.Descriptor instead.
func (*AppserverAndSub) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{2}
}

func (x *AppserverAndSub) GetSubId() string {
	if x != nil {
		return x.SubId
	}
	return ""
}

func (x *AppserverAndSub) GetAppserver() *Appserver {
	if x != nil {
		return x.Appserver
	}
	return nil
}

type AppserverRole struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AppserverId   string                 `protobuf:"bytes,3,opt,name=appserver_id,json=appserverId,proto3" json:"appserver_id,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppserverRole) Reset() {
	*x = AppserverRole{}
	mi := &file_server_v1_server_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppserverRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppserverRole) ProtoMessage() {}

func (x *AppserverRole) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppserverRole.ProtoReflect.Descriptor instead.
func (*AppserverRole) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{3}
}

func (x *AppserverRole) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AppserverRole) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppserverRole) GetAppserverId() string {
	if x != nil {
		return x.AppserverId
	}
	return ""
}

func (x *AppserverRole) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AppserverRole) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type AppserverRoleSub struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AppserverRoleId string                 `protobuf:"bytes,2,opt,name=appserver_role_id,json=appserverRoleId,proto3" json:"appserver_role_id,omitempty"`
	AppserverSubId  string                 `protobuf:"bytes,3,opt,name=appserver_sub_id,json=appserverSubId,proto3" json:"appserver_sub_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AppserverRoleSub) Reset() {
	*x = AppserverRoleSub{}
	mi := &file_server_v1_server_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppserverRoleSub) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppserverRoleSub) ProtoMessage() {}

func (x *AppserverRoleSub) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppserverRoleSub.ProtoReflect.Descriptor instead.
func (*AppserverRoleSub) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{4}
}

func (x *AppserverRoleSub) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AppserverRoleSub) GetAppserverRoleId() string {
	if x != nil {
		return x.AppserverRoleId
	}
	return ""
}

func (x *AppserverRoleSub) GetAppserverSubId() string {
	if x != nil {
		return x.AppserverSubId
	}
	return ""
}

type Channel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AppserverId   string                 `protobuf:"bytes,3,opt,name=appserver_id,json=appserverId,proto3" json:"appserver_id,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Channel) Reset() {
	*x = Channel{}
	mi := &file_server_v1_server_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Channel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Channel) ProtoMessage() {}

func (x *Channel) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Channel.ProtoReflect.Descriptor instead.
func (*Channel) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{5}
}

func (x *Channel) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Channel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Channel) GetAppserverId() string {
	if x != nil {
		return x.AppserverId
	}
	return ""
}

func (x *Channel) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Channel) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// RESPONSE/REQUEST
// ----- Appserver -----
type CreateAppserverRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAppserverRequest) Reset() {
	*x = CreateAppserverRequest{}
	mi := &file_server_v1_server_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAppserverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppserverRequest) ProtoMessage() {}

func (x *CreateAppserverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppserverRequest.ProtoReflect.Descriptor instead.
func (*CreateAppserverRequest) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{6}
}

func (x *CreateAppserverRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetByIdAppserverRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetByIdAppserverRequest) Reset() {
	*x = GetByIdAppserverRequest{}
	mi := &file_server_v1_server_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetByIdAppserverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByIdAppserverRequest) ProtoMessage() {}

func (x *GetByIdAppserverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByIdAppserverRequest.ProtoReflect.Descriptor instead.
func (*GetByIdAppserverRequest) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{7}
}

func (x *GetByIdAppserverRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListAppserversRequest struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Name          *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAppserversRequest) Reset() {
	*x = ListAppserversRequest{}
	mi := &file_server_v1_server_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAppserversRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppserversRequest) ProtoMessage() {}

func (x *ListAppserversRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppserversRequest.ProtoReflect.Descriptor instead.
func (*ListAppserversRequest) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{8}
}

func (x *ListAppserversRequest) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

type DeleteAppserverRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAppserverRequest) Reset() {
	*x = DeleteAppserverRequest{}
	mi := &file_server_v1_server_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAppserverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAppserverRequest) ProtoMessage() {}

func (x *DeleteAppserverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAppserverRequest.ProtoReflect.Descriptor instead.
func (*DeleteAppserverRequest) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteAppserverRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateAppserverResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appserver     *Appserver             `protobuf:"bytes,1,opt,name=appserver,proto3" json:"appserver,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAppserverResponse) Reset() {
	*x = CreateAppserverResponse{}
	mi := &file_server_v1_server_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAppserverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppserverResponse) ProtoMessage() {}

func (x *CreateAppserverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppserverResponse.ProtoReflect.Descriptor instead.
func (*CreateAppserverResponse) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{10}
}

func (x *CreateAppserverResponse) GetAppserver() *Appserver {
	if x != nil {
		return x.Appserver
	}
	return nil
}

type GetByIdAppserverResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appserver     *Appserver             `protobuf:"bytes,1,opt,name=appserver,proto3" json:"appserver,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetByIdAppserverResponse) Reset() {
	*x = GetByIdAppserverResponse{}
	mi := &file_server_v1_server_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetByIdAppserverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByIdAppserverResponse) ProtoMessage() {}

func (x *GetByIdAppserverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByIdAppserverResponse.ProtoReflect.Descriptor instead.
func (*GetByIdAppserverResponse) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{11}
}

func (x *GetByIdAppserverResponse) GetAppserver() *Appserver {
	if x != nil {
		return x.Appserver
	}
	return nil
}

type ListAppserversResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appservers    []*Appserver           `protobuf:"bytes,1,rep,name=appservers,proto3" json:"appservers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAppserversResponse) Reset() {
	*x = ListAppserversResponse{}
	mi := &file_server_v1_server_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAppserversResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppserversResponse) ProtoMessage() {}

func (x *ListAppserversResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppserversResponse.ProtoReflect.Descriptor instead.
func (*ListAppserversResponse) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{12}
}

func (x *ListAppserversResponse) GetAppservers() []*Appserver {
	if x != nil {
		return x.Appservers
	}
	return nil
}

type DeleteAppserverResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAppserverResponse) Reset() {
	*x = DeleteAppserverResponse{}
	mi := &file_server_v1_server_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAppserverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAppserverResponse) ProtoMessage() {}

func (x *DeleteAppserverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAppserverResponse.ProtoReflect.Descriptor instead.
func (*DeleteAppserverResponse) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{13}
}

// ----- AppserverSub -----
type CreateAppserverSubRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppserverId   string                 `protobuf:"bytes,1,opt,name=appserver_id,json=appserverId,proto3" json:"appserver_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAppserverSubRequest) Reset() {
	*x = CreateAppserverSubRequest{}
	mi := &file_server_v1_server_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAppserverSubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppserverSubRequest) ProtoMessage() {}

func (x *CreateAppserverSubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppserverSubRequest.ProtoReflect.Descriptor instead.
func (*CreateAppserverSubRequest) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{14}
}

func (x *CreateAppserverSubRequest) GetAppserverId() string {
	if x != nil {
		return x.AppserverId
	}
	return ""
}

type GetUserAppserverSubsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserAppserverSubsRequest) Reset() {
	*x = GetUserAppserverSubsRequest{}
	mi := &file_server_v1_server_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserAppserverSubsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAppserverSubsRequest) ProtoMessage() {}

func (x *GetUserAppserverSubsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAppserverSubsRequest.ProtoReflect.Descriptor instead.
func (*GetUserAppserverSubsRequest) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{15}
}

type DeleteAppserverSubRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAppserverSubRequest) Reset() {
	*x = DeleteAppserverSubRequest{}
	mi := &file_server_v1_server_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAppserverSubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAppserverSubRequest) ProtoMessage() {}

func (x *DeleteAppserverSubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAppserverSubRequest.ProtoReflect.Descriptor instead.
func (*DeleteAppserverSubRequest) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteAppserverSubRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateAppserverSubResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppserverSub  *AppserverSub          `protobuf:"bytes,1,opt,name=appserver_sub,json=appserverSub,proto3" json:"appserver_sub,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAppserverSubResponse) Reset() {
	*x = CreateAppserverSubResponse{}
	mi := &file_server_v1_server_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAppserverSubResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppserverSubResponse) ProtoMessage() {}

func (x *CreateAppserverSubResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppserverSubResponse.ProtoReflect.Descriptor instead.
func (*CreateAppserverSubResponse) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{17}
}

func (x *CreateAppserverSubResponse) GetAppserverSub() *AppserverSub {
	if x != nil {
		return x.AppserverSub
	}
	return nil
}

type GetUserAppserverSubsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appservers    []*AppserverAndSub     `protobuf:"bytes,1,rep,name=appservers,proto3" json:"appservers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserAppserverSubsResponse) Reset() {
	*x = GetUserAppserverSubsResponse{}
	mi := &file_server_v1_server_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserAppserverSubsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAppserverSubsResponse) ProtoMessage() {}

func (x *GetUserAppserverSubsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAppserverSubsResponse.ProtoReflect.Descriptor instead.
func (*GetUserAppserverSubsResponse) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{18}
}

func (x *GetUserAppserverSubsResponse) GetAppservers() []*AppserverAndSub {
	if x != nil {
		return x.Appservers
	}
	return nil
}

type DeleteAppserverSubResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAppserverSubResponse) Reset() {
	*x = DeleteAppserverSubResponse{}
	mi := &file_server_v1_server_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAppserverSubResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAppserverSubResponse) ProtoMessage() {}

func (x *DeleteAppserverSubResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAppserverSubResponse.ProtoReflect.Descriptor instead.
func (*DeleteAppserverSubResponse) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{19}
}

// ----- AppserverRole -----
type CreateAppserverRoleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppserverId   string                 `protobuf:"bytes,1,opt,name=appserver_id,json=appserverId,proto3" json:"appserver_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAppserverRoleRequest) Reset() {
	*x = CreateAppserverRoleRequest{}
	mi := &file_server_v1_server_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAppserverRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppserverRoleRequest) ProtoMessage() {}

func (x *CreateAppserverRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppserverRoleRequest.ProtoReflect.Descriptor instead.
func (*CreateAppserverRoleRequest) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{20}
}

func (x *CreateAppserverRoleRequest) GetAppserverId() string {
	if x != nil {
		return x.AppserverId
	}
	return ""
}

func (x *CreateAppserverRoleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetAllAppserverRolesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppserverId   string                 `protobuf:"bytes,1,opt,name=appserver_id,json=appserverId,proto3" json:"appserver_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllAppserverRolesRequest) Reset() {
	*x = GetAllAppserverRolesRequest{}
	mi := &file_server_v1_server_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllAppserverRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAppserverRolesRequest) ProtoMessage() {}

func (x *GetAllAppserverRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAppserverRolesRequest.ProtoReflect.Descriptor instead.
func (*GetAllAppserverRolesRequest) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{21}
}

func (x *GetAllAppserverRolesRequest) GetAppserverId() string {
	if x != nil {
		return x.AppserverId
	}
	return ""
}

type DeleteAppserverRoleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAppserverRoleRequest) Reset() {
	*x = DeleteAppserverRoleRequest{}
	mi := &file_server_v1_server_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAppserverRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAppserverRoleRequest) ProtoMessage() {}

func (x *DeleteAppserverRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAppserverRoleRequest.ProtoReflect.Descriptor instead.
func (*DeleteAppserverRoleRequest) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteAppserverRoleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateAppserverRoleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppserverRole *AppserverRole         `protobuf:"bytes,1,opt,name=appserver_role,json=appserverRole,proto3" json:"appserver_role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAppserverRoleResponse) Reset() {
	*x = CreateAppserverRoleResponse{}
	mi := &file_server_v1_server_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAppserverRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppserverRoleResponse) ProtoMessage() {}

func (x *CreateAppserverRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppserverRoleResponse.ProtoReflect.Descriptor instead.
func (*CreateAppserverRoleResponse) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{23}
}

func (x *CreateAppserverRoleResponse) GetAppserverRole() *AppserverRole {
	if x != nil {
		return x.AppserverRole
	}
	return nil
}

type GetAllAppserverRolesResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	AppserverRoles []*AppserverRole       `protobuf:"bytes,1,rep,name=appserver_roles,json=appserverRoles,proto3" json:"appserver_roles,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetAllAppserverRolesResponse) Reset() {
	*x = GetAllAppserverRolesResponse{}
	mi := &file_server_v1_server_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllAppserverRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAppserverRolesResponse) ProtoMessage() {}

func (x *GetAllAppserverRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAppserverRolesResponse.ProtoReflect.Descriptor instead.
func (*GetAllAppserverRolesResponse) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{24}
}

func (x *GetAllAppserverRolesResponse) GetAppserverRoles() []*AppserverRole {
	if x != nil {
		return x.AppserverRoles
	}
	return nil
}

type DeleteAppserverRoleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAppserverRoleResponse) Reset() {
	*x = DeleteAppserverRoleResponse{}
	mi := &file_server_v1_server_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAppserverRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAppserverRoleResponse) ProtoMessage() {}

func (x *DeleteAppserverRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAppserverRoleResponse.ProtoReflect.Descriptor instead.
func (*DeleteAppserverRoleResponse) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{25}
}

// ----- AppserverRole -----
type CreateAppserverRoleSubRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AppserverRoleId string                 `protobuf:"bytes,1,opt,name=appserver_role_id,json=appserverRoleId,proto3" json:"appserver_role_id,omitempty"`
	AppserverSubId  string                 `protobuf:"bytes,2,opt,name=appserver_sub_id,json=appserverSubId,proto3" json:"appserver_sub_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateAppserverRoleSubRequest) Reset() {
	*x = CreateAppserverRoleSubRequest{}
	mi := &file_server_v1_server_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAppserverRoleSubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppserverRoleSubRequest) ProtoMessage() {}

func (x *CreateAppserverRoleSubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppserverRoleSubRequest.ProtoReflect.Descriptor instead.
func (*CreateAppserverRoleSubRequest) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{26}
}

func (x *CreateAppserverRoleSubRequest) GetAppserverRoleId() string {
	if x != nil {
		return x.AppserverRoleId
	}
	return ""
}

func (x *CreateAppserverRoleSubRequest) GetAppserverSubId() string {
	if x != nil {
		return x.AppserverSubId
	}
	return ""
}

type DeleteAppserverRoleSubRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAppserverRoleSubRequest) Reset() {
	*x = DeleteAppserverRoleSubRequest{}
	mi := &file_server_v1_server_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAppserverRoleSubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAppserverRoleSubRequest) ProtoMessage() {}

func (x *DeleteAppserverRoleSubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAppserverRoleSubRequest.ProtoReflect.Descriptor instead.
func (*DeleteAppserverRoleSubRequest) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{27}
}

func (x *DeleteAppserverRoleSubRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateAppserverRoleSubResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	AppserverRoleSub *AppserverRoleSub      `protobuf:"bytes,1,opt,name=appserver_role_sub,json=appserverRoleSub,proto3" json:"appserver_role_sub,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateAppserverRoleSubResponse) Reset() {
	*x = CreateAppserverRoleSubResponse{}
	mi := &file_server_v1_server_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAppserverRoleSubResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppserverRoleSubResponse) ProtoMessage() {}

func (x *CreateAppserverRoleSubResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppserverRoleSubResponse.ProtoReflect.Descriptor instead.
func (*CreateAppserverRoleSubResponse) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{28}
}

func (x *CreateAppserverRoleSubResponse) GetAppserverRoleSub() *AppserverRoleSub {
	if x != nil {
		return x.AppserverRoleSub
	}
	return nil
}

type DeleteAppserverRoleSubResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAppserverRoleSubResponse) Reset() {
	*x = DeleteAppserverRoleSubResponse{}
	mi := &file_server_v1_server_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAppserverRoleSubResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAppserverRoleSubResponse) ProtoMessage() {}

func (x *DeleteAppserverRoleSubResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAppserverRoleSubResponse.ProtoReflect.Descriptor instead.
func (*DeleteAppserverRoleSubResponse) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{29}
}

var File_server_v1_server_proto protoreflect.FileDescriptor

var file_server_v1_server_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa5, 0x01, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb7, 0x01, 0x0a,
	0x0c, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x75, 0x62, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x5c, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x75, 0x62,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x75, 0x62, 0x49, 0x64,
	0x12, 0x32, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x09, 0x61, 0x70, 0x70, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x22, 0xcc, 0x01, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x70,
	0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x78, 0x0a, 0x10, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x53, 0x75, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x70, 0x70, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x73, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61,
	0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x75, 0x62, 0x49, 0x64, 0x22, 0xc6, 0x01,
	0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x2c, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x29, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x41,
	0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x49, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x28, 0x0a, 0x16, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x32, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x09, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x22, 0x4e, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x41, 0x70,
	0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x32, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x09, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x22, 0x4e, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a,
	0x0a, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70,
	0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x73, 0x22, 0x19, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e,
	0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x53, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x1d,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x53, 0x75, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2b, 0x0a,
	0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x53, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5a, 0x0a, 0x1a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x75, 0x62,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x75, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x75, 0x62, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x53, 0x75, 0x62, 0x22, 0x5a, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x75, 0x62, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x41, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x73, 0x22, 0x1c, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x75, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x53, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x40, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41,
	0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5e, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x61, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41,
	0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x1d, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x75, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x75,
	0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x70, 0x70, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x75, 0x62, 0x49, 0x64, 0x22, 0x2f,
	0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x6b, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x75, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x49, 0x0a, 0x12, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x75, 0x62, 0x52, 0x10, 0x61, 0x70, 0x70, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x75, 0x62, 0x22, 0x20, 0x0a, 0x1e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x53, 0x75, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xd1,
	0x09, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x5a, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x79, 0x49, 0x64, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0e, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x20, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70,
	0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x63, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x53, 0x75, 0x62, 0x12, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x53, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x75, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x75, 0x62, 0x73, 0x12, 0x26, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x75, 0x62, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x53, 0x75, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x63, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x53, 0x75, 0x62, 0x12, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x53, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x75, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x25, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x6f, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x75, 0x62, 0x12, 0x28, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x75, 0x62, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x53, 0x75, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x6f, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x75, 0x62, 0x12, 0x28, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x75, 0x62, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x75, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_v1_server_proto_rawDescOnce sync.Once
	file_server_v1_server_proto_rawDescData = file_server_v1_server_proto_rawDesc
)

func file_server_v1_server_proto_rawDescGZIP() []byte {
	file_server_v1_server_proto_rawDescOnce.Do(func() {
		file_server_v1_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_v1_server_proto_rawDescData)
	})
	return file_server_v1_server_proto_rawDescData
}

var file_server_v1_server_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_server_v1_server_proto_goTypes = []any{
	(*Appserver)(nil),                      // 0: server.v1.Appserver
	(*AppserverSub)(nil),                   // 1: server.v1.AppserverSub
	(*AppserverAndSub)(nil),                // 2: server.v1.AppserverAndSub
	(*AppserverRole)(nil),                  // 3: server.v1.AppserverRole
	(*AppserverRoleSub)(nil),               // 4: server.v1.AppserverRoleSub
	(*Channel)(nil),                        // 5: server.v1.Channel
	(*CreateAppserverRequest)(nil),         // 6: server.v1.CreateAppserverRequest
	(*GetByIdAppserverRequest)(nil),        // 7: server.v1.GetByIdAppserverRequest
	(*ListAppserversRequest)(nil),          // 8: server.v1.ListAppserversRequest
	(*DeleteAppserverRequest)(nil),         // 9: server.v1.DeleteAppserverRequest
	(*CreateAppserverResponse)(nil),        // 10: server.v1.CreateAppserverResponse
	(*GetByIdAppserverResponse)(nil),       // 11: server.v1.GetByIdAppserverResponse
	(*ListAppserversResponse)(nil),         // 12: server.v1.ListAppserversResponse
	(*DeleteAppserverResponse)(nil),        // 13: server.v1.DeleteAppserverResponse
	(*CreateAppserverSubRequest)(nil),      // 14: server.v1.CreateAppserverSubRequest
	(*GetUserAppserverSubsRequest)(nil),    // 15: server.v1.GetUserAppserverSubsRequest
	(*DeleteAppserverSubRequest)(nil),      // 16: server.v1.DeleteAppserverSubRequest
	(*CreateAppserverSubResponse)(nil),     // 17: server.v1.CreateAppserverSubResponse
	(*GetUserAppserverSubsResponse)(nil),   // 18: server.v1.GetUserAppserverSubsResponse
	(*DeleteAppserverSubResponse)(nil),     // 19: server.v1.DeleteAppserverSubResponse
	(*CreateAppserverRoleRequest)(nil),     // 20: server.v1.CreateAppserverRoleRequest
	(*GetAllAppserverRolesRequest)(nil),    // 21: server.v1.GetAllAppserverRolesRequest
	(*DeleteAppserverRoleRequest)(nil),     // 22: server.v1.DeleteAppserverRoleRequest
	(*CreateAppserverRoleResponse)(nil),    // 23: server.v1.CreateAppserverRoleResponse
	(*GetAllAppserverRolesResponse)(nil),   // 24: server.v1.GetAllAppserverRolesResponse
	(*DeleteAppserverRoleResponse)(nil),    // 25: server.v1.DeleteAppserverRoleResponse
	(*CreateAppserverRoleSubRequest)(nil),  // 26: server.v1.CreateAppserverRoleSubRequest
	(*DeleteAppserverRoleSubRequest)(nil),  // 27: server.v1.DeleteAppserverRoleSubRequest
	(*CreateAppserverRoleSubResponse)(nil), // 28: server.v1.CreateAppserverRoleSubResponse
	(*DeleteAppserverRoleSubResponse)(nil), // 29: server.v1.DeleteAppserverRoleSubResponse
	(*timestamppb.Timestamp)(nil),          // 30: google.protobuf.Timestamp
	(*wrapperspb.StringValue)(nil),         // 31: google.protobuf.StringValue
}
var file_server_v1_server_proto_depIdxs = []int32{
	30, // 0: server.v1.Appserver.created_at:type_name -> google.protobuf.Timestamp
	30, // 1: server.v1.Appserver.updated_at:type_name -> google.protobuf.Timestamp
	30, // 2: server.v1.AppserverSub.created_at:type_name -> google.protobuf.Timestamp
	30, // 3: server.v1.AppserverSub.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 4: server.v1.AppserverAndSub.appserver:type_name -> server.v1.Appserver
	30, // 5: server.v1.AppserverRole.created_at:type_name -> google.protobuf.Timestamp
	30, // 6: server.v1.AppserverRole.updated_at:type_name -> google.protobuf.Timestamp
	30, // 7: server.v1.Channel.created_at:type_name -> google.protobuf.Timestamp
	30, // 8: server.v1.Channel.updated_at:type_name -> google.protobuf.Timestamp
	31, // 9: server.v1.ListAppserversRequest.name:type_name -> google.protobuf.StringValue
	0,  // 10: server.v1.CreateAppserverResponse.appserver:type_name -> server.v1.Appserver
	0,  // 11: server.v1.GetByIdAppserverResponse.appserver:type_name -> server.v1.Appserver
	0,  // 12: server.v1.ListAppserversResponse.appservers:type_name -> server.v1.Appserver
	1,  // 13: server.v1.CreateAppserverSubResponse.appserver_sub:type_name -> server.v1.AppserverSub
	2,  // 14: server.v1.GetUserAppserverSubsResponse.appservers:type_name -> server.v1.AppserverAndSub
	3,  // 15: server.v1.CreateAppserverRoleResponse.appserver_role:type_name -> server.v1.AppserverRole
	3,  // 16: server.v1.GetAllAppserverRolesResponse.appserver_roles:type_name -> server.v1.AppserverRole
	4,  // 17: server.v1.CreateAppserverRoleSubResponse.appserver_role_sub:type_name -> server.v1.AppserverRoleSub
	6,  // 18: server.v1.ServerService.CreateAppserver:input_type -> server.v1.CreateAppserverRequest
	7,  // 19: server.v1.ServerService.GetByIdAppserver:input_type -> server.v1.GetByIdAppserverRequest
	8,  // 20: server.v1.ServerService.ListAppservers:input_type -> server.v1.ListAppserversRequest
	9,  // 21: server.v1.ServerService.DeleteAppserver:input_type -> server.v1.DeleteAppserverRequest
	14, // 22: server.v1.ServerService.CreateAppserverSub:input_type -> server.v1.CreateAppserverSubRequest
	15, // 23: server.v1.ServerService.GetUserAppserverSubs:input_type -> server.v1.GetUserAppserverSubsRequest
	16, // 24: server.v1.ServerService.DeleteAppserverSub:input_type -> server.v1.DeleteAppserverSubRequest
	20, // 25: server.v1.ServerService.CreateAppserverRole:input_type -> server.v1.CreateAppserverRoleRequest
	21, // 26: server.v1.ServerService.GetAllAppserverRoles:input_type -> server.v1.GetAllAppserverRolesRequest
	22, // 27: server.v1.ServerService.DeleteAppserverRole:input_type -> server.v1.DeleteAppserverRoleRequest
	26, // 28: server.v1.ServerService.CreateAppserverRoleSub:input_type -> server.v1.CreateAppserverRoleSubRequest
	27, // 29: server.v1.ServerService.DeleteAppserverRoleSub:input_type -> server.v1.DeleteAppserverRoleSubRequest
	10, // 30: server.v1.ServerService.CreateAppserver:output_type -> server.v1.CreateAppserverResponse
	11, // 31: server.v1.ServerService.GetByIdAppserver:output_type -> server.v1.GetByIdAppserverResponse
	12, // 32: server.v1.ServerService.ListAppservers:output_type -> server.v1.ListAppserversResponse
	13, // 33: server.v1.ServerService.DeleteAppserver:output_type -> server.v1.DeleteAppserverResponse
	17, // 34: server.v1.ServerService.CreateAppserverSub:output_type -> server.v1.CreateAppserverSubResponse
	18, // 35: server.v1.ServerService.GetUserAppserverSubs:output_type -> server.v1.GetUserAppserverSubsResponse
	19, // 36: server.v1.ServerService.DeleteAppserverSub:output_type -> server.v1.DeleteAppserverSubResponse
	23, // 37: server.v1.ServerService.CreateAppserverRole:output_type -> server.v1.CreateAppserverRoleResponse
	24, // 38: server.v1.ServerService.GetAllAppserverRoles:output_type -> server.v1.GetAllAppserverRolesResponse
	25, // 39: server.v1.ServerService.DeleteAppserverRole:output_type -> server.v1.DeleteAppserverRoleResponse
	28, // 40: server.v1.ServerService.CreateAppserverRoleSub:output_type -> server.v1.CreateAppserverRoleSubResponse
	29, // 41: server.v1.ServerService.DeleteAppserverRoleSub:output_type -> server.v1.DeleteAppserverRoleSubResponse
	30, // [30:42] is the sub-list for method output_type
	18, // [18:30] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_server_v1_server_proto_init() }
func file_server_v1_server_proto_init() {
	if File_server_v1_server_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_v1_server_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_server_v1_server_proto_goTypes,
		DependencyIndexes: file_server_v1_server_proto_depIdxs,
		MessageInfos:      file_server_v1_server_proto_msgTypes,
	}.Build()
	File_server_v1_server_proto = out.File
	file_server_v1_server_proto_rawDesc = nil
	file_server_v1_server_proto_goTypes = nil
	file_server_v1_server_proto_depIdxs = nil
}
