syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

package server.v1;
option go_package = "/server";

// The greeting service definition.
service ServerService {
  // ----- APPSERVER ----
  rpc CreateAppserver(CreateAppserverRequest)
      returns (CreateAppserverResponse) {}
  rpc GetByIdAppserver(GetByIdAppserverRequest)
      returns (GetByIdAppserverResponse) {}
  rpc ListAppservers(ListAppserversRequest) returns (ListAppserversResponse) {}
  rpc DeleteAppserver(DeleteAppserverRequest)
      returns (DeleteAppserverResponse) {}

  // ----- APPSERVER SUB -----
  rpc CreateAppserverSub(CreateAppserverSubRequest)
      returns (CreateAppserverSubResponse) {}
  rpc GetUserAppserverSubs(GetUserAppserverSubsRequest)
      returns (GetUserAppserverSubsResponse) {}
  rpc DeleteAppserverSub(DeleteAppserverSubRequest)
      returns (DeleteAppserverSubResponse) {}

  // ----- APPSERVER ROLE -----
  rpc CreateAppserverRole(CreateAppserverRoleRequest)
      returns (CreateAppserverRoleResponse) {}
  rpc GetAllAppserverRoles(GetAllAppserverRolesRequest)
      returns (GetAllAppserverRolesResponse) {}
  rpc DeleteAppserverRole(DeleteAppserverRoleRequest)
      returns (DeleteAppserverRoleResponse) {}

  // ----- CHANNEL ----
  rpc CreateChannel(CreateChannelRequest) returns (CreateChannelResponse);
  rpc GetByIdChannel(GetByIdChannelRequest) returns (GetByIdChannelResponse);
  rpc ListChannels(ListChannelsRequest) returns (ListChannelsResponse);
  rpc DeleteChannel(DeleteChannelRequest) returns (DeleteChannelResponse);
}

// RESOURCES
message Appserver {
  string id = 1;
  string name = 2;
  google.protobuf.Timestamp created_at = 3;
  google.protobuf.Timestamp updated_at = 4;
}

message AppserverSub {
  string id = 1;
  string appserver_id = 2;
  google.protobuf.Timestamp created_at = 3;
  google.protobuf.Timestamp updated_at = 4;
}

message AppserverAndSub {
  string sub_id = 1;
  Appserver appserver = 2;
}

message AppserverRole {
  string id = 1;
  string name = 2;
  string appserver_id = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp updated_at = 5;
}

message Channel {
  string id = 1;
  string name = 2;
  string appserver_id = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp updated_at = 5;
}

// RESPONSE/REQUEST
// ----- Appserver -----
message CreateAppserverRequest { string name = 1; }
message GetByIdAppserverRequest { string id = 1; }
message ListAppserversRequest { google.protobuf.StringValue name = 1; }
message DeleteAppserverRequest { string id = 1; }

message CreateAppserverResponse { Appserver appserver = 1; }
message GetByIdAppserverResponse { Appserver appserver = 1; }
message ListAppserversResponse { repeated Appserver appservers = 1; }
message DeleteAppserverResponse {}

// ----- AppserverSub -----
message CreateAppserverSubRequest { string appserver_id = 1; }
message GetUserAppserverSubsRequest {}
message DeleteAppserverSubRequest { string id = 1; }

message CreateAppserverSubResponse { AppserverSub appserver_sub = 1; }
message GetUserAppserverSubsResponse {
  repeated AppserverAndSub appservers = 1;
}
message DeleteAppserverSubResponse {}

// ----- AppserverRole -----
message CreateAppserverRoleRequest {
  string appserver_id = 1;
  string name = 2;
}
message GetAllAppserverRolesRequest { string appserver_id = 1; }
message DeleteAppserverRoleRequest { string id = 1; }

message CreateAppserverRoleResponse { AppserverRole appserver_role = 1; }
message GetAllAppserverRolesResponse {
  repeated AppserverRole appserver_roles = 1;
}
message DeleteAppserverRoleResponse {}

// ----- Channel -----
message CreateChannelRequest {
  string name = 1;
  string appserver_id = 2;
}
message GetByIdChannelRequest { string id = 1; }
message ListChannelsRequest {
  google.protobuf.StringValue name = 1;
  google.protobuf.StringValue appserver_id = 2;
}
message DeleteChannelRequest { string id = 1; }

message CreateChannelResponse { Channel channel = 1; }
message GetByIdChannelResponse { Channel channel = 1; }
message ListChannelsResponse { repeated Channel channels = 1; }
message DeleteChannelResponse {}
