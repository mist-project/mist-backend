// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        (unknown)
// source: v1/event/event.proto

package event

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	_ "google.golang.org/protobuf/types/known/wrapperspb"
	"mist/src/protos/v1/appserver"
	"mist/src/protos/v1/appserver_role"
	"mist/src/protos/v1/appuser"
	"mist/src/protos/v1/channel"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActionType int32

const (
	ActionType_ACTION_TYPE_UNSPECIFIED ActionType = 0
	// LIST
	ActionType_ACTION_LIST_SERVERS  ActionType = 1
	ActionType_ACTION_LIST_CHANNELS ActionType = 2
	ActionType_ACTION_LIST_ROLES    ActionType = 3
	// ADD
	ActionType_ACTION_ADD_SERVER  ActionType = 100
	ActionType_ACTION_ADD_CHANNEL ActionType = 101
	ActionType_ACTION_ADD_ROLE    ActionType = 102
	// REMOVE
	ActionType_ACTION_REMOVE_SERVER  ActionType = 300
	ActionType_ACTION_REMOVE_CHANNEL ActionType = 301
	ActionType_ACTION_REMOVE_ROLE    ActionType = 302
)

// Enum value maps for ActionType.
var (
	ActionType_name = map[int32]string{
		0:   "ACTION_TYPE_UNSPECIFIED",
		1:   "ACTION_LIST_SERVERS",
		2:   "ACTION_LIST_CHANNELS",
		3:   "ACTION_LIST_ROLES",
		100: "ACTION_ADD_SERVER",
		101: "ACTION_ADD_CHANNEL",
		102: "ACTION_ADD_ROLE",
		300: "ACTION_REMOVE_SERVER",
		301: "ACTION_REMOVE_CHANNEL",
		302: "ACTION_REMOVE_ROLE",
	}
	ActionType_value = map[string]int32{
		"ACTION_TYPE_UNSPECIFIED": 0,
		"ACTION_LIST_SERVERS":     1,
		"ACTION_LIST_CHANNELS":    2,
		"ACTION_LIST_ROLES":       3,
		"ACTION_ADD_SERVER":       100,
		"ACTION_ADD_CHANNEL":      101,
		"ACTION_ADD_ROLE":         102,
		"ACTION_REMOVE_SERVER":    300,
		"ACTION_REMOVE_CHANNEL":   301,
		"ACTION_REMOVE_ROLE":      302,
	}
)

func (x ActionType) Enum() *ActionType {
	p := new(ActionType)
	*p = x
	return p
}

func (x ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_event_event_proto_enumTypes[0].Descriptor()
}

func (ActionType) Type() protoreflect.EnumType {
	return &file_v1_event_event_proto_enumTypes[0]
}

func (x ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionType.Descriptor instead.
func (ActionType) EnumDescriptor() ([]byte, []int) {
	return file_v1_event_event_proto_rawDescGZIP(), []int{0}
}

// ----- SHARED -----
type Event struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Meta  *Meta                  `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// Types that are valid to be assigned to Data:
	//
	//	*Event_ListServers
	//	*Event_ListChannels
	//	*Event_ListRoles
	//	*Event_AddServer
	//	*Event_AddChannel
	//	*Event_AddRole
	//	*Event_RemoveServer
	//	*Event_RemoveChannel
	//	*Event_RemoveRole
	Data          isEvent_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_v1_event_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_v1_event_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_v1_event_event_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Event) GetData() isEvent_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Event) GetListServers() *ListServers {
	if x != nil {
		if x, ok := x.Data.(*Event_ListServers); ok {
			return x.ListServers
		}
	}
	return nil
}

func (x *Event) GetListChannels() *ListChannels {
	if x != nil {
		if x, ok := x.Data.(*Event_ListChannels); ok {
			return x.ListChannels
		}
	}
	return nil
}

func (x *Event) GetListRoles() *ListRoles {
	if x != nil {
		if x, ok := x.Data.(*Event_ListRoles); ok {
			return x.ListRoles
		}
	}
	return nil
}

func (x *Event) GetAddServer() *AddServer {
	if x != nil {
		if x, ok := x.Data.(*Event_AddServer); ok {
			return x.AddServer
		}
	}
	return nil
}

func (x *Event) GetAddChannel() *AddChannel {
	if x != nil {
		if x, ok := x.Data.(*Event_AddChannel); ok {
			return x.AddChannel
		}
	}
	return nil
}

func (x *Event) GetAddRole() *AddRole {
	if x != nil {
		if x, ok := x.Data.(*Event_AddRole); ok {
			return x.AddRole
		}
	}
	return nil
}

func (x *Event) GetRemoveServer() *RemoveServer {
	if x != nil {
		if x, ok := x.Data.(*Event_RemoveServer); ok {
			return x.RemoveServer
		}
	}
	return nil
}

func (x *Event) GetRemoveChannel() *RemoveChannel {
	if x != nil {
		if x, ok := x.Data.(*Event_RemoveChannel); ok {
			return x.RemoveChannel
		}
	}
	return nil
}

func (x *Event) GetRemoveRole() *RemoveRole {
	if x != nil {
		if x, ok := x.Data.(*Event_RemoveRole); ok {
			return x.RemoveRole
		}
	}
	return nil
}

type isEvent_Data interface {
	isEvent_Data()
}

type Event_ListServers struct {
	// LIST
	ListServers *ListServers `protobuf:"bytes,2,opt,name=list_servers,json=listServers,proto3,oneof"`
}

type Event_ListChannels struct {
	ListChannels *ListChannels `protobuf:"bytes,3,opt,name=list_channels,json=listChannels,proto3,oneof"`
}

type Event_ListRoles struct {
	ListRoles *ListRoles `protobuf:"bytes,4,opt,name=list_roles,json=listRoles,proto3,oneof"`
}

type Event_AddServer struct {
	// ADD
	AddServer *AddServer `protobuf:"bytes,100,opt,name=add_server,json=addServer,proto3,oneof"`
}

type Event_AddChannel struct {
	AddChannel *AddChannel `protobuf:"bytes,101,opt,name=add_channel,json=addChannel,proto3,oneof"`
}

type Event_AddRole struct {
	AddRole *AddRole `protobuf:"bytes,102,opt,name=add_role,json=addRole,proto3,oneof"`
}

type Event_RemoveServer struct {
	// REMOVE
	RemoveServer *RemoveServer `protobuf:"bytes,300,opt,name=remove_server,json=removeServer,proto3,oneof"`
}

type Event_RemoveChannel struct {
	RemoveChannel *RemoveChannel `protobuf:"bytes,301,opt,name=remove_channel,json=removeChannel,proto3,oneof"`
}

type Event_RemoveRole struct {
	RemoveRole *RemoveRole `protobuf:"bytes,302,opt,name=remove_role,json=removeRole,proto3,oneof"`
}

func (*Event_ListServers) isEvent_Data() {}

func (*Event_ListChannels) isEvent_Data() {}

func (*Event_ListRoles) isEvent_Data() {}

func (*Event_AddServer) isEvent_Data() {}

func (*Event_AddChannel) isEvent_Data() {}

func (*Event_AddRole) isEvent_Data() {}

func (*Event_RemoveServer) isEvent_Data() {}

func (*Event_RemoveChannel) isEvent_Data() {}

func (*Event_RemoveRole) isEvent_Data() {}

type Meta struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Action        ActionType             `protobuf:"varint,1,opt,name=action,proto3,enum=v1.event.ActionType" json:"action,omitempty"`
	Appusers      []*appuser.Appuser     `protobuf:"bytes,2,rep,name=appusers,proto3" json:"appusers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Meta) Reset() {
	*x = Meta{}
	mi := &file_v1_event_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meta) ProtoMessage() {}

func (x *Meta) ProtoReflect() protoreflect.Message {
	mi := &file_v1_event_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meta.ProtoReflect.Descriptor instead.
func (*Meta) Descriptor() ([]byte, []int) {
	return file_v1_event_event_proto_rawDescGZIP(), []int{1}
}

func (x *Meta) GetAction() ActionType {
	if x != nil {
		return x.Action
	}
	return ActionType_ACTION_TYPE_UNSPECIFIED
}

func (x *Meta) GetAppusers() []*appuser.Appuser {
	if x != nil {
		return x.Appusers
	}
	return nil
}

// MESSAGES
// ----- LIST ------
type ListServers struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appservers    []*appserver.Appserver `protobuf:"bytes,1,rep,name=appservers,proto3" json:"appservers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListServers) Reset() {
	*x = ListServers{}
	mi := &file_v1_event_event_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServers) ProtoMessage() {}

func (x *ListServers) ProtoReflect() protoreflect.Message {
	mi := &file_v1_event_event_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServers.ProtoReflect.Descriptor instead.
func (*ListServers) Descriptor() ([]byte, []int) {
	return file_v1_event_event_proto_rawDescGZIP(), []int{2}
}

func (x *ListServers) GetAppservers() []*appserver.Appserver {
	if x != nil {
		return x.Appservers
	}
	return nil
}

type ListChannels struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channels      []*channel.Channel     `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChannels) Reset() {
	*x = ListChannels{}
	mi := &file_v1_event_event_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChannels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChannels) ProtoMessage() {}

func (x *ListChannels) ProtoReflect() protoreflect.Message {
	mi := &file_v1_event_event_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChannels.ProtoReflect.Descriptor instead.
func (*ListChannels) Descriptor() ([]byte, []int) {
	return file_v1_event_event_proto_rawDescGZIP(), []int{3}
}

func (x *ListChannels) GetChannels() []*channel.Channel {
	if x != nil {
		return x.Channels
	}
	return nil
}

type ListRoles struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Roles         []*appserver_role.AppserverRole `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRoles) Reset() {
	*x = ListRoles{}
	mi := &file_v1_event_event_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRoles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoles) ProtoMessage() {}

func (x *ListRoles) ProtoReflect() protoreflect.Message {
	mi := &file_v1_event_event_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoles.ProtoReflect.Descriptor instead.
func (*ListRoles) Descriptor() ([]byte, []int) {
	return file_v1_event_event_proto_rawDescGZIP(), []int{4}
}

func (x *ListRoles) GetRoles() []*appserver_role.AppserverRole {
	if x != nil {
		return x.Roles
	}
	return nil
}

// ----- ADD ------
type AddServer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appserver     *appserver.Appserver   `protobuf:"bytes,1,opt,name=appserver,proto3" json:"appserver,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddServer) Reset() {
	*x = AddServer{}
	mi := &file_v1_event_event_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddServer) ProtoMessage() {}

func (x *AddServer) ProtoReflect() protoreflect.Message {
	mi := &file_v1_event_event_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddServer.ProtoReflect.Descriptor instead.
func (*AddServer) Descriptor() ([]byte, []int) {
	return file_v1_event_event_proto_rawDescGZIP(), []int{5}
}

func (x *AddServer) GetAppserver() *appserver.Appserver {
	if x != nil {
		return x.Appserver
	}
	return nil
}

type AddChannel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channel       *channel.Channel       `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddChannel) Reset() {
	*x = AddChannel{}
	mi := &file_v1_event_event_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddChannel) ProtoMessage() {}

func (x *AddChannel) ProtoReflect() protoreflect.Message {
	mi := &file_v1_event_event_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddChannel.ProtoReflect.Descriptor instead.
func (*AddChannel) Descriptor() ([]byte, []int) {
	return file_v1_event_event_proto_rawDescGZIP(), []int{6}
}

func (x *AddChannel) GetChannel() *channel.Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

type AddRole struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Role          *appserver_role.AppserverRole `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddRole) Reset() {
	*x = AddRole{}
	mi := &file_v1_event_event_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRole) ProtoMessage() {}

func (x *AddRole) ProtoReflect() protoreflect.Message {
	mi := &file_v1_event_event_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRole.ProtoReflect.Descriptor instead.
func (*AddRole) Descriptor() ([]byte, []int) {
	return file_v1_event_event_proto_rawDescGZIP(), []int{7}
}

func (x *AddRole) GetRole() *appserver_role.AppserverRole {
	if x != nil {
		return x.Role
	}
	return nil
}

// ----- REMOVE ------
type RemoveServer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveServer) Reset() {
	*x = RemoveServer{}
	mi := &file_v1_event_event_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveServer) ProtoMessage() {}

func (x *RemoveServer) ProtoReflect() protoreflect.Message {
	mi := &file_v1_event_event_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveServer.ProtoReflect.Descriptor instead.
func (*RemoveServer) Descriptor() ([]byte, []int) {
	return file_v1_event_event_proto_rawDescGZIP(), []int{8}
}

func (x *RemoveServer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RemoveChannel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveChannel) Reset() {
	*x = RemoveChannel{}
	mi := &file_v1_event_event_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveChannel) ProtoMessage() {}

func (x *RemoveChannel) ProtoReflect() protoreflect.Message {
	mi := &file_v1_event_event_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveChannel.ProtoReflect.Descriptor instead.
func (*RemoveChannel) Descriptor() ([]byte, []int) {
	return file_v1_event_event_proto_rawDescGZIP(), []int{9}
}

func (x *RemoveChannel) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RemoveRole struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveRole) Reset() {
	*x = RemoveRole{}
	mi := &file_v1_event_event_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRole) ProtoMessage() {}

func (x *RemoveRole) ProtoReflect() protoreflect.Message {
	mi := &file_v1_event_event_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRole.ProtoReflect.Descriptor instead.
func (*RemoveRole) Descriptor() ([]byte, []int) {
	return file_v1_event_event_proto_rawDescGZIP(), []int{10}
}

func (x *RemoveRole) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_v1_event_event_proto protoreflect.FileDescriptor

var file_v1_event_event_proto_rawDesc = []byte{
	0x0a, 0x14, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x70,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x76, 0x31,
	0x2f, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18,
	0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc0, 0x04, 0x0a, 0x05, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76,
	0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x73, 0x12, 0x3d, 0x0a, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x73, 0x48, 0x00, 0x52, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x73, 0x12, 0x34, 0x0a, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x48, 0x00, 0x52, 0x09, 0x6c, 0x69,
	0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x31,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x09, 0x61, 0x64, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x37, 0x0a,
	0x0b, 0x61, 0x64, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64,
	0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x2e, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x5f, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x41, 0x0a, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0xad, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x38, 0x0a, 0x0b, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0xae, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x52, 0x6f, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x65, 0x0a, 0x04, 0x4d,
	0x65, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2f, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x41, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x52, 0x08, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x22, 0x46, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x73, 0x12, 0x37, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x0a,
	0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x22, 0x3f, 0x0a, 0x0c, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x2f, 0x0a, 0x08, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76,
	0x31, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x22, 0x43, 0x0a, 0x09, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x70, 0x70,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73,
	0x22, 0x42, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x35, 0x0a,
	0x09, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x41, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x09, 0x61, 0x70, 0x70, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x22, 0x3b, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x12, 0x2d, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x22, 0x3f, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x34, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x76, 0x31, 0x2e,
	0x61, 0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x41,
	0x70, 0x70, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x22, 0x1e, 0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x1f, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x1c, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x2a, 0x87, 0x02, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1b, 0x0a, 0x17, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a,
	0x13, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x53, 0x45, 0x52,
	0x56, 0x45, 0x52, 0x53, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x53, 0x10, 0x02,
	0x12, 0x15, 0x0a, 0x11, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f,
	0x52, 0x4f, 0x4c, 0x45, 0x53, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x41, 0x44, 0x44, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x10, 0x64, 0x12, 0x16,
	0x0a, 0x12, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x44, 0x44, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x4e, 0x45, 0x4c, 0x10, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x41, 0x44, 0x44, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x10, 0x66, 0x12, 0x19, 0x0a, 0x14, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x53, 0x45, 0x52,
	0x56, 0x45, 0x52, 0x10, 0xac, 0x02, 0x12, 0x1a, 0x0a, 0x15, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x10,
	0xad, 0x02, 0x12, 0x17, 0x0a, 0x12, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x4d,
	0x4f, 0x56, 0x45, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x10, 0xae, 0x02, 0x42, 0x7b, 0x0a, 0x0c, 0x63,
	0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x0a, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x1e, 0x6d, 0x69, 0x73, 0x74, 0x2f,
	0x73, 0x72, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x3b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0xa2, 0x02, 0x03, 0x56, 0x45, 0x58, 0xaa,
	0x02, 0x08, 0x56, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0xca, 0x02, 0x08, 0x56, 0x31, 0x5c,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0xe2, 0x02, 0x14, 0x56, 0x31, 0x5c, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x09, 0x56,
	0x31, 0x3a, 0x3a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_event_event_proto_rawDescOnce sync.Once
	file_v1_event_event_proto_rawDescData = file_v1_event_event_proto_rawDesc
)

func file_v1_event_event_proto_rawDescGZIP() []byte {
	file_v1_event_event_proto_rawDescOnce.Do(func() {
		file_v1_event_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_event_event_proto_rawDescData)
	})
	return file_v1_event_event_proto_rawDescData
}

var file_v1_event_event_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_v1_event_event_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_v1_event_event_proto_goTypes = []any{
	(ActionType)(0),                      // 0: v1.event.ActionType
	(*Event)(nil),                        // 1: v1.event.Event
	(*Meta)(nil),                         // 2: v1.event.Meta
	(*ListServers)(nil),                  // 3: v1.event.ListServers
	(*ListChannels)(nil),                 // 4: v1.event.ListChannels
	(*ListRoles)(nil),                    // 5: v1.event.ListRoles
	(*AddServer)(nil),                    // 6: v1.event.AddServer
	(*AddChannel)(nil),                   // 7: v1.event.AddChannel
	(*AddRole)(nil),                      // 8: v1.event.AddRole
	(*RemoveServer)(nil),                 // 9: v1.event.RemoveServer
	(*RemoveChannel)(nil),                // 10: v1.event.RemoveChannel
	(*RemoveRole)(nil),                   // 11: v1.event.RemoveRole
	(*appuser.Appuser)(nil),              // 12: v1.appuser.Appuser
	(*appserver.Appserver)(nil),          // 13: v1.appserver.Appserver
	(*channel.Channel)(nil),              // 14: v1.channel.Channel
	(*appserver_role.AppserverRole)(nil), // 15: v1.appserver_role.AppserverRole
}
var file_v1_event_event_proto_depIdxs = []int32{
	2,  // 0: v1.event.Event.meta:type_name -> v1.event.Meta
	3,  // 1: v1.event.Event.list_servers:type_name -> v1.event.ListServers
	4,  // 2: v1.event.Event.list_channels:type_name -> v1.event.ListChannels
	5,  // 3: v1.event.Event.list_roles:type_name -> v1.event.ListRoles
	6,  // 4: v1.event.Event.add_server:type_name -> v1.event.AddServer
	7,  // 5: v1.event.Event.add_channel:type_name -> v1.event.AddChannel
	8,  // 6: v1.event.Event.add_role:type_name -> v1.event.AddRole
	9,  // 7: v1.event.Event.remove_server:type_name -> v1.event.RemoveServer
	10, // 8: v1.event.Event.remove_channel:type_name -> v1.event.RemoveChannel
	11, // 9: v1.event.Event.remove_role:type_name -> v1.event.RemoveRole
	0,  // 10: v1.event.Meta.action:type_name -> v1.event.ActionType
	12, // 11: v1.event.Meta.appusers:type_name -> v1.appuser.Appuser
	13, // 12: v1.event.ListServers.appservers:type_name -> v1.appserver.Appserver
	14, // 13: v1.event.ListChannels.channels:type_name -> v1.channel.Channel
	15, // 14: v1.event.ListRoles.roles:type_name -> v1.appserver_role.AppserverRole
	13, // 15: v1.event.AddServer.appserver:type_name -> v1.appserver.Appserver
	14, // 16: v1.event.AddChannel.channel:type_name -> v1.channel.Channel
	15, // 17: v1.event.AddRole.role:type_name -> v1.appserver_role.AppserverRole
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_v1_event_event_proto_init() }
func file_v1_event_event_proto_init() {
	if File_v1_event_event_proto != nil {
		return
	}
	file_v1_event_event_proto_msgTypes[0].OneofWrappers = []any{
		(*Event_ListServers)(nil),
		(*Event_ListChannels)(nil),
		(*Event_ListRoles)(nil),
		(*Event_AddServer)(nil),
		(*Event_AddChannel)(nil),
		(*Event_AddRole)(nil),
		(*Event_RemoveServer)(nil),
		(*Event_RemoveChannel)(nil),
		(*Event_RemoveRole)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_event_event_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_event_event_proto_goTypes,
		DependencyIndexes: file_v1_event_event_proto_depIdxs,
		EnumInfos:         file_v1_event_event_proto_enumTypes,
		MessageInfos:      file_v1_event_event_proto_msgTypes,
	}.Build()
	File_v1_event_event_proto = out.File
	file_v1_event_event_proto_rawDesc = nil
	file_v1_event_event_proto_goTypes = nil
	file_v1_event_event_proto_depIdxs = nil
}
