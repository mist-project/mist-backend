
SELECT pg_catalog.set_config('search_path', '', false);

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA public;

CREATE TABLE public.appserver (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    name character varying(255) NOT NULL,
    owner_id uuid NOT NULL,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now()
);

CREATE TABLE public.appserver_role (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    appserver_id uuid NOT NULL,
    name character varying(255) NOT NULL,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now()
);

CREATE TABLE public.appserver_role_sub (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    appserver_role_id uuid NOT NULL,
    appserver_sub_id uuid NOT NULL,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now()
);

CREATE TABLE public.appserver_sub (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    appserver_id uuid NOT NULL,
    owner_id uuid NOT NULL,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now()
);

CREATE TABLE public.channel (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    name character varying(255) NOT NULL,
    appserver_id uuid NOT NULL,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now()
);

CREATE TABLE public.goose_db_version (
    id integer NOT NULL,
    version_id bigint NOT NULL,
    is_applied boolean NOT NULL,
    tstamp timestamp without time zone DEFAULT now() NOT NULL
);

ALTER TABLE public.goose_db_version ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.goose_db_version_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY public.appserver
    ADD CONSTRAINT appserver_pkey PRIMARY KEY (id);

ALTER TABLE ONLY public.appserver_role
    ADD CONSTRAINT appserver_role_pkey PRIMARY KEY (id);

ALTER TABLE ONLY public.appserver_role_sub
    ADD CONSTRAINT appserver_role_sub_pkey PRIMARY KEY (id);

ALTER TABLE ONLY public.appserver_role_sub
    ADD CONSTRAINT appserver_role_sub_uk_appserver_role_appserver_sub UNIQUE (appserver_role_id, appserver_sub_id);

ALTER TABLE ONLY public.appserver_role
    ADD CONSTRAINT appserver_role_uk_appserver_name UNIQUE (appserver_id, name);

ALTER TABLE ONLY public.appserver_sub
    ADD CONSTRAINT appserver_sub_pkey PRIMARY KEY (id);

ALTER TABLE ONLY public.appserver_sub
    ADD CONSTRAINT appserver_sub_uk_appserver_owner UNIQUE (appserver_id, owner_id);

ALTER TABLE ONLY public.channel
    ADD CONSTRAINT channel_pkey PRIMARY KEY (id);

ALTER TABLE ONLY public.goose_db_version
    ADD CONSTRAINT goose_db_version_pkey PRIMARY KEY (id);

ALTER TABLE ONLY public.appserver_role
    ADD CONSTRAINT appserver_role_appserver_id_fkey FOREIGN KEY (appserver_id) REFERENCES public.appserver(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.appserver_role_sub
    ADD CONSTRAINT appserver_role_sub_appserver_role_id_fkey FOREIGN KEY (appserver_role_id) REFERENCES public.appserver_role(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.appserver_role_sub
    ADD CONSTRAINT appserver_role_sub_appserver_sub_id_fkey FOREIGN KEY (appserver_sub_id) REFERENCES public.appserver_sub(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.appserver_sub
    ADD CONSTRAINT appserver_sub_appserver_id_fkey FOREIGN KEY (appserver_id) REFERENCES public.appserver(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.channel
    ADD CONSTRAINT channel_appserver_id_fkey FOREIGN KEY (appserver_id) REFERENCES public.appserver(id) ON DELETE CASCADE;

