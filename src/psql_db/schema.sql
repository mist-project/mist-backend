
SELECT pg_catalog.set_config('search_path', '', false);

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA public;

CREATE TYPE public.appuser_online_status AS ENUM (
    'inactive',
    'online',
    'offline',
    'away'
);

CREATE TABLE public.appserver (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    name character varying(64) NOT NULL,
    appuser_id uuid NOT NULL,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now()
);

CREATE TABLE public.appserver_role (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    appserver_id uuid NOT NULL,
    name character varying(64) NOT NULL,
    appserver_permission_mask bigint DEFAULT 0 NOT NULL,
    channel_permission_mask bigint DEFAULT 0 NOT NULL,
    sub_permission_mask bigint DEFAULT 0 NOT NULL,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now()
);

CREATE TABLE public.appserver_role_sub (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    appuser_id uuid NOT NULL,
    appserver_sub_id uuid NOT NULL,
    appserver_role_id uuid NOT NULL,
    appserver_id uuid NOT NULL,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now()
);

CREATE TABLE public.appserver_sub (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    appserver_id uuid NOT NULL,
    appuser_id uuid NOT NULL,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now()
);

CREATE TABLE public.appuser (
    id uuid NOT NULL,
    username character varying(255) NOT NULL,
    online_status public.appuser_online_status DEFAULT 'offline'::public.appuser_online_status NOT NULL,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now()
);

CREATE TABLE public.channel (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    name character varying(64) NOT NULL,
    appserver_id uuid NOT NULL,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now()
);

CREATE TABLE public.channel_role (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    appserver_id uuid NOT NULL,
    channel_id uuid NOT NULL,
    appserver_role_id uuid NOT NULL,
    created_at timestamp without time zone DEFAULT now(),
    updated_at timestamp without time zone DEFAULT now()
);

CREATE TABLE public.goose_db_version (
    id integer NOT NULL,
    version_id bigint NOT NULL,
    is_applied boolean NOT NULL,
    tstamp timestamp without time zone DEFAULT now() NOT NULL
);

ALTER TABLE public.goose_db_version ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.goose_db_version_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY public.appserver
    ADD CONSTRAINT appserver_pkey PRIMARY KEY (id);

ALTER TABLE ONLY public.appserver_role
    ADD CONSTRAINT appserver_role_pkey PRIMARY KEY (id);

ALTER TABLE ONLY public.appserver_role_sub
    ADD CONSTRAINT appserver_role_sub_pkey PRIMARY KEY (id);

ALTER TABLE ONLY public.appserver_role_sub
    ADD CONSTRAINT appserver_role_sub_uk_role_sub_server UNIQUE (appserver_role_id, appserver_sub_id, appserver_id);

ALTER TABLE ONLY public.appserver_role
    ADD CONSTRAINT appserver_role_uk_appserver_name UNIQUE (appserver_id, name);

ALTER TABLE ONLY public.appserver_role
    ADD CONSTRAINT appserver_role_uk_server_role UNIQUE (appserver_id, id);

ALTER TABLE ONLY public.appserver_sub
    ADD CONSTRAINT appserver_sub_pkey PRIMARY KEY (id);

ALTER TABLE ONLY public.appserver_sub
    ADD CONSTRAINT appserver_sub_uk_appserver_owner UNIQUE (appserver_id, appuser_id);

ALTER TABLE ONLY public.appserver_sub
    ADD CONSTRAINT appserver_sub_uk_server_sub UNIQUE (appserver_id, id);

ALTER TABLE ONLY public.appuser
    ADD CONSTRAINT appuser_pkey PRIMARY KEY (id);

ALTER TABLE ONLY public.appuser
    ADD CONSTRAINT appuser_username_key UNIQUE (username);

ALTER TABLE ONLY public.channel
    ADD CONSTRAINT channel_pkey PRIMARY KEY (id);

ALTER TABLE ONLY public.channel_role
    ADD CONSTRAINT channel_role_pkey PRIMARY KEY (id);

ALTER TABLE ONLY public.channel_role
    ADD CONSTRAINT channel_role_uk_role_channel UNIQUE (channel_id, appserver_role_id);

ALTER TABLE ONLY public.channel
    ADD CONSTRAINT channel_uk_server_channel UNIQUE (appserver_id, id);

ALTER TABLE ONLY public.goose_db_version
    ADD CONSTRAINT goose_db_version_pkey PRIMARY KEY (id);

ALTER TABLE ONLY public.appserver
    ADD CONSTRAINT appserver_appuser_id_fkey FOREIGN KEY (appuser_id) REFERENCES public.appuser(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.appserver_role
    ADD CONSTRAINT appserver_role_appserver_id_fkey FOREIGN KEY (appserver_id) REFERENCES public.appserver(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.appserver_role_sub
    ADD CONSTRAINT appserver_role_sub_appserver_id_fkey FOREIGN KEY (appserver_id) REFERENCES public.appserver(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.appserver_role_sub
    ADD CONSTRAINT appserver_role_sub_appserver_role_id_fkey FOREIGN KEY (appserver_role_id) REFERENCES public.appserver_role(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.appserver_role_sub
    ADD CONSTRAINT appserver_role_sub_appserver_sub_id_fkey FOREIGN KEY (appserver_sub_id) REFERENCES public.appserver_sub(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.appserver_role_sub
    ADD CONSTRAINT appserver_role_sub_appuser_id_fkey FOREIGN KEY (appuser_id) REFERENCES public.appuser(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.appserver_role_sub
    ADD CONSTRAINT appserver_role_sub_uk_server_and_role FOREIGN KEY (appserver_id, appserver_role_id) REFERENCES public.appserver_role(appserver_id, id) ON DELETE CASCADE;

ALTER TABLE ONLY public.appserver_role_sub
    ADD CONSTRAINT appserver_role_sub_uk_server_and_sub FOREIGN KEY (appserver_id, appserver_sub_id) REFERENCES public.appserver_sub(appserver_id, id) ON DELETE CASCADE;

ALTER TABLE ONLY public.appserver_sub
    ADD CONSTRAINT appserver_sub_appserver_id_fkey FOREIGN KEY (appserver_id) REFERENCES public.appserver(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.appserver_sub
    ADD CONSTRAINT appserver_sub_appuser_id_fkey FOREIGN KEY (appuser_id) REFERENCES public.appuser(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.channel
    ADD CONSTRAINT channel_appserver_id_fkey FOREIGN KEY (appserver_id) REFERENCES public.appserver(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.channel_role
    ADD CONSTRAINT channel_role_appserver_id_channel_id_fkey FOREIGN KEY (appserver_id, channel_id) REFERENCES public.channel(appserver_id, id) ON DELETE CASCADE;

ALTER TABLE ONLY public.channel_role
    ADD CONSTRAINT channel_role_appserver_role_id_fkey FOREIGN KEY (appserver_role_id) REFERENCES public.appserver_role(id) ON DELETE CASCADE;

